// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state_other.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "state_other.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* StateOtherMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateOtherMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_state_5fother_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_state_5fother_2eproto() {
  protobuf_AddDesc_state_5fother_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "state_other.proto");
  GOOGLE_CHECK(file != NULL);
  StateOtherMessage_descriptor_ = file->message_type(0);
  static const int StateOtherMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOtherMessage, brake_fluid_),
  };
  StateOtherMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StateOtherMessage_descriptor_,
      StateOtherMessage::default_instance_,
      StateOtherMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOtherMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(StateOtherMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateOtherMessage, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_state_5fother_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StateOtherMessage_descriptor_, &StateOtherMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_state_5fother_2eproto() {
  delete StateOtherMessage::default_instance_;
  delete StateOtherMessage_reflection_;
}

void protobuf_AddDesc_state_5fother_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_state_5fother_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021state_other.proto\"(\n\021StateOtherMessage"
    "\022\023\n\013brake_fluid\030\001 \001(\001B4\n\"com.mx.server.r"
    "emote.v2.bean.stateB\016StateOtherbean", 115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "state_other.proto", &protobuf_RegisterTypes);
  StateOtherMessage::default_instance_ = new StateOtherMessage();
  StateOtherMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_state_5fother_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_state_5fother_2eproto {
  StaticDescriptorInitializer_state_5fother_2eproto() {
    protobuf_AddDesc_state_5fother_2eproto();
  }
} static_descriptor_initializer_state_5fother_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateOtherMessage::kBrakeFluidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateOtherMessage::StateOtherMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StateOtherMessage)
}

void StateOtherMessage::InitAsDefaultInstance() {
}

StateOtherMessage::StateOtherMessage(const StateOtherMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StateOtherMessage)
}

void StateOtherMessage::SharedCtor() {
  _cached_size_ = 0;
  brake_fluid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StateOtherMessage::~StateOtherMessage() {
  // @@protoc_insertion_point(destructor:StateOtherMessage)
  SharedDtor();
}

void StateOtherMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StateOtherMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateOtherMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateOtherMessage_descriptor_;
}

const StateOtherMessage& StateOtherMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_state_5fother_2eproto();
  return *default_instance_;
}

StateOtherMessage* StateOtherMessage::default_instance_ = NULL;

StateOtherMessage* StateOtherMessage::New(::google::protobuf::Arena* arena) const {
  StateOtherMessage* n = new StateOtherMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateOtherMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:StateOtherMessage)
  brake_fluid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StateOtherMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StateOtherMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double brake_fluid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &brake_fluid_)));
          set_has_brake_fluid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StateOtherMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StateOtherMessage)
  return false;
#undef DO_
}

void StateOtherMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StateOtherMessage)
  // optional double brake_fluid = 1;
  if (has_brake_fluid()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->brake_fluid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StateOtherMessage)
}

::google::protobuf::uint8* StateOtherMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StateOtherMessage)
  // optional double brake_fluid = 1;
  if (has_brake_fluid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->brake_fluid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StateOtherMessage)
  return target;
}

int StateOtherMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:StateOtherMessage)
  int total_size = 0;

  // optional double brake_fluid = 1;
  if (has_brake_fluid()) {
    total_size += 1 + 8;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateOtherMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StateOtherMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StateOtherMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StateOtherMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StateOtherMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StateOtherMessage)
    MergeFrom(*source);
  }
}

void StateOtherMessage::MergeFrom(const StateOtherMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StateOtherMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_brake_fluid()) {
      set_brake_fluid(from.brake_fluid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void StateOtherMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StateOtherMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateOtherMessage::CopyFrom(const StateOtherMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StateOtherMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateOtherMessage::IsInitialized() const {

  return true;
}

void StateOtherMessage::Swap(StateOtherMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateOtherMessage::InternalSwap(StateOtherMessage* other) {
  std::swap(brake_fluid_, other->brake_fluid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateOtherMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateOtherMessage_descriptor_;
  metadata.reflection = StateOtherMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StateOtherMessage

// optional double brake_fluid = 1;
bool StateOtherMessage::has_brake_fluid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StateOtherMessage::set_has_brake_fluid() {
  _has_bits_[0] |= 0x00000001u;
}
void StateOtherMessage::clear_has_brake_fluid() {
  _has_bits_[0] &= ~0x00000001u;
}
void StateOtherMessage::clear_brake_fluid() {
  brake_fluid_ = 0;
  clear_has_brake_fluid();
}
 double StateOtherMessage::brake_fluid() const {
  // @@protoc_insertion_point(field_get:StateOtherMessage.brake_fluid)
  return brake_fluid_;
}
 void StateOtherMessage::set_brake_fluid(double value) {
  set_has_brake_fluid();
  brake_fluid_ = value;
  // @@protoc_insertion_point(field_set:StateOtherMessage.brake_fluid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
