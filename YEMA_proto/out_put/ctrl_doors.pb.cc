// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ctrl_doors.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ctrl_doors.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CtrlDoorsMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CtrlDoorsMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DoorsStateInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DoorsStateInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ctrl_5fdoors_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ctrl_5fdoors_2eproto() {
  protobuf_AddDesc_ctrl_5fdoors_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ctrl_doors.proto");
  GOOGLE_CHECK(file != NULL);
  CtrlDoorsMessage_descriptor_ = file->message_type(0);
  static const int CtrlDoorsMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlDoorsMessage, common_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlDoorsMessage, doors_ctrl_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlDoorsMessage, doors_state_info_),
  };
  CtrlDoorsMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CtrlDoorsMessage_descriptor_,
      CtrlDoorsMessage::default_instance_,
      CtrlDoorsMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlDoorsMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(CtrlDoorsMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlDoorsMessage, _internal_metadata_),
      -1);
  DoorsStateInfo_descriptor_ = file->message_type(1);
  static const int DoorsStateInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorsStateInfo, lock_on_off_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorsStateInfo, lock_state_exception_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorsStateInfo, door_on_off_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorsStateInfo, door_state_exception_),
  };
  DoorsStateInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DoorsStateInfo_descriptor_,
      DoorsStateInfo::default_instance_,
      DoorsStateInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorsStateInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(DoorsStateInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoorsStateInfo, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ctrl_5fdoors_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CtrlDoorsMessage_descriptor_, &CtrlDoorsMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DoorsStateInfo_descriptor_, &DoorsStateInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ctrl_5fdoors_2eproto() {
  delete CtrlDoorsMessage::default_instance_;
  delete CtrlDoorsMessage_reflection_;
  delete DoorsStateInfo::default_instance_;
  delete DoorsStateInfo_reflection_;
}

void protobuf_AddDesc_ctrl_5fdoors_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ctrl_5fdoors_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020ctrl_doors.proto\032\034ctrl_common_param_tb"
    "ox.proto\"\223\001\n\020CtrlDoorsMessage\022*\n\014common_"
    "param\030\001 \001(\0132\024.CtrlCommonParamTbox\022(\n\017doo"
    "rs_ctrl_info\030\002 \001(\0132\017.CtrlCommonInfo\022)\n\020d"
    "oors_state_info\030\004 \001(\0132\017.DoorsStateInfo\"v"
    "\n\016DoorsStateInfo\022\023\n\013lock_on_off\030\001 \001(\006\022\034\n"
    "\024lock_state_exception\030\002 \001(\006\022\023\n\013door_on_o"
    "ff\030\004 \001(\006\022\034\n\024door_state_exception\030\006 \001(\006B-"
    "\n\034com.mx.server.remote.v2.beanB\rCtrlDoor"
    "sBean", 365);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ctrl_doors.proto", &protobuf_RegisterTypes);
  CtrlDoorsMessage::default_instance_ = new CtrlDoorsMessage();
  DoorsStateInfo::default_instance_ = new DoorsStateInfo();
  CtrlDoorsMessage::default_instance_->InitAsDefaultInstance();
  DoorsStateInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ctrl_5fdoors_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ctrl_5fdoors_2eproto {
  StaticDescriptorInitializer_ctrl_5fdoors_2eproto() {
    protobuf_AddDesc_ctrl_5fdoors_2eproto();
  }
} static_descriptor_initializer_ctrl_5fdoors_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtrlDoorsMessage::kCommonParamFieldNumber;
const int CtrlDoorsMessage::kDoorsCtrlInfoFieldNumber;
const int CtrlDoorsMessage::kDoorsStateInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtrlDoorsMessage::CtrlDoorsMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CtrlDoorsMessage)
}

void CtrlDoorsMessage::InitAsDefaultInstance() {
  common_param_ = const_cast< ::CtrlCommonParamTbox*>(&::CtrlCommonParamTbox::default_instance());
  doors_ctrl_info_ = const_cast< ::CtrlCommonInfo*>(&::CtrlCommonInfo::default_instance());
  doors_state_info_ = const_cast< ::DoorsStateInfo*>(&::DoorsStateInfo::default_instance());
}

CtrlDoorsMessage::CtrlDoorsMessage(const CtrlDoorsMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CtrlDoorsMessage)
}

void CtrlDoorsMessage::SharedCtor() {
  _cached_size_ = 0;
  common_param_ = NULL;
  doors_ctrl_info_ = NULL;
  doors_state_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CtrlDoorsMessage::~CtrlDoorsMessage() {
  // @@protoc_insertion_point(destructor:CtrlDoorsMessage)
  SharedDtor();
}

void CtrlDoorsMessage::SharedDtor() {
  if (this != default_instance_) {
    delete common_param_;
    delete doors_ctrl_info_;
    delete doors_state_info_;
  }
}

void CtrlDoorsMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CtrlDoorsMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CtrlDoorsMessage_descriptor_;
}

const CtrlDoorsMessage& CtrlDoorsMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ctrl_5fdoors_2eproto();
  return *default_instance_;
}

CtrlDoorsMessage* CtrlDoorsMessage::default_instance_ = NULL;

CtrlDoorsMessage* CtrlDoorsMessage::New(::google::protobuf::Arena* arena) const {
  CtrlDoorsMessage* n = new CtrlDoorsMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CtrlDoorsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:CtrlDoorsMessage)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_common_param()) {
      if (common_param_ != NULL) common_param_->::CtrlCommonParamTbox::Clear();
    }
    if (has_doors_ctrl_info()) {
      if (doors_ctrl_info_ != NULL) doors_ctrl_info_->::CtrlCommonInfo::Clear();
    }
    if (has_doors_state_info()) {
      if (doors_state_info_ != NULL) doors_state_info_->::DoorsStateInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CtrlDoorsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CtrlDoorsMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CtrlCommonParamTbox common_param = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_common_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_doors_ctrl_info;
        break;
      }

      // optional .CtrlCommonInfo doors_ctrl_info = 2;
      case 2: {
        if (tag == 18) {
         parse_doors_ctrl_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doors_ctrl_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_doors_state_info;
        break;
      }

      // optional .DoorsStateInfo doors_state_info = 4;
      case 4: {
        if (tag == 34) {
         parse_doors_state_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doors_state_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CtrlDoorsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CtrlDoorsMessage)
  return false;
#undef DO_
}

void CtrlDoorsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CtrlDoorsMessage)
  // optional .CtrlCommonParamTbox common_param = 1;
  if (has_common_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->common_param_, output);
  }

  // optional .CtrlCommonInfo doors_ctrl_info = 2;
  if (has_doors_ctrl_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->doors_ctrl_info_, output);
  }

  // optional .DoorsStateInfo doors_state_info = 4;
  if (has_doors_state_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->doors_state_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CtrlDoorsMessage)
}

::google::protobuf::uint8* CtrlDoorsMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CtrlDoorsMessage)
  // optional .CtrlCommonParamTbox common_param = 1;
  if (has_common_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->common_param_, false, target);
  }

  // optional .CtrlCommonInfo doors_ctrl_info = 2;
  if (has_doors_ctrl_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->doors_ctrl_info_, false, target);
  }

  // optional .DoorsStateInfo doors_state_info = 4;
  if (has_doors_state_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->doors_state_info_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CtrlDoorsMessage)
  return target;
}

int CtrlDoorsMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CtrlDoorsMessage)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .CtrlCommonParamTbox common_param = 1;
    if (has_common_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->common_param_);
    }

    // optional .CtrlCommonInfo doors_ctrl_info = 2;
    if (has_doors_ctrl_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->doors_ctrl_info_);
    }

    // optional .DoorsStateInfo doors_state_info = 4;
    if (has_doors_state_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->doors_state_info_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CtrlDoorsMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CtrlDoorsMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CtrlDoorsMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CtrlDoorsMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CtrlDoorsMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CtrlDoorsMessage)
    MergeFrom(*source);
  }
}

void CtrlDoorsMessage::MergeFrom(const CtrlDoorsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CtrlDoorsMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_common_param()) {
      mutable_common_param()->::CtrlCommonParamTbox::MergeFrom(from.common_param());
    }
    if (from.has_doors_ctrl_info()) {
      mutable_doors_ctrl_info()->::CtrlCommonInfo::MergeFrom(from.doors_ctrl_info());
    }
    if (from.has_doors_state_info()) {
      mutable_doors_state_info()->::DoorsStateInfo::MergeFrom(from.doors_state_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CtrlDoorsMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CtrlDoorsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtrlDoorsMessage::CopyFrom(const CtrlDoorsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CtrlDoorsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtrlDoorsMessage::IsInitialized() const {

  return true;
}

void CtrlDoorsMessage::Swap(CtrlDoorsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtrlDoorsMessage::InternalSwap(CtrlDoorsMessage* other) {
  std::swap(common_param_, other->common_param_);
  std::swap(doors_ctrl_info_, other->doors_ctrl_info_);
  std::swap(doors_state_info_, other->doors_state_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CtrlDoorsMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CtrlDoorsMessage_descriptor_;
  metadata.reflection = CtrlDoorsMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CtrlDoorsMessage

// optional .CtrlCommonParamTbox common_param = 1;
bool CtrlDoorsMessage::has_common_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CtrlDoorsMessage::set_has_common_param() {
  _has_bits_[0] |= 0x00000001u;
}
void CtrlDoorsMessage::clear_has_common_param() {
  _has_bits_[0] &= ~0x00000001u;
}
void CtrlDoorsMessage::clear_common_param() {
  if (common_param_ != NULL) common_param_->::CtrlCommonParamTbox::Clear();
  clear_has_common_param();
}
const ::CtrlCommonParamTbox& CtrlDoorsMessage::common_param() const {
  // @@protoc_insertion_point(field_get:CtrlDoorsMessage.common_param)
  return common_param_ != NULL ? *common_param_ : *default_instance_->common_param_;
}
::CtrlCommonParamTbox* CtrlDoorsMessage::mutable_common_param() {
  set_has_common_param();
  if (common_param_ == NULL) {
    common_param_ = new ::CtrlCommonParamTbox;
  }
  // @@protoc_insertion_point(field_mutable:CtrlDoorsMessage.common_param)
  return common_param_;
}
::CtrlCommonParamTbox* CtrlDoorsMessage::release_common_param() {
  // @@protoc_insertion_point(field_release:CtrlDoorsMessage.common_param)
  clear_has_common_param();
  ::CtrlCommonParamTbox* temp = common_param_;
  common_param_ = NULL;
  return temp;
}
void CtrlDoorsMessage::set_allocated_common_param(::CtrlCommonParamTbox* common_param) {
  delete common_param_;
  common_param_ = common_param;
  if (common_param) {
    set_has_common_param();
  } else {
    clear_has_common_param();
  }
  // @@protoc_insertion_point(field_set_allocated:CtrlDoorsMessage.common_param)
}

// optional .CtrlCommonInfo doors_ctrl_info = 2;
bool CtrlDoorsMessage::has_doors_ctrl_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CtrlDoorsMessage::set_has_doors_ctrl_info() {
  _has_bits_[0] |= 0x00000002u;
}
void CtrlDoorsMessage::clear_has_doors_ctrl_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void CtrlDoorsMessage::clear_doors_ctrl_info() {
  if (doors_ctrl_info_ != NULL) doors_ctrl_info_->::CtrlCommonInfo::Clear();
  clear_has_doors_ctrl_info();
}
const ::CtrlCommonInfo& CtrlDoorsMessage::doors_ctrl_info() const {
  // @@protoc_insertion_point(field_get:CtrlDoorsMessage.doors_ctrl_info)
  return doors_ctrl_info_ != NULL ? *doors_ctrl_info_ : *default_instance_->doors_ctrl_info_;
}
::CtrlCommonInfo* CtrlDoorsMessage::mutable_doors_ctrl_info() {
  set_has_doors_ctrl_info();
  if (doors_ctrl_info_ == NULL) {
    doors_ctrl_info_ = new ::CtrlCommonInfo;
  }
  // @@protoc_insertion_point(field_mutable:CtrlDoorsMessage.doors_ctrl_info)
  return doors_ctrl_info_;
}
::CtrlCommonInfo* CtrlDoorsMessage::release_doors_ctrl_info() {
  // @@protoc_insertion_point(field_release:CtrlDoorsMessage.doors_ctrl_info)
  clear_has_doors_ctrl_info();
  ::CtrlCommonInfo* temp = doors_ctrl_info_;
  doors_ctrl_info_ = NULL;
  return temp;
}
void CtrlDoorsMessage::set_allocated_doors_ctrl_info(::CtrlCommonInfo* doors_ctrl_info) {
  delete doors_ctrl_info_;
  doors_ctrl_info_ = doors_ctrl_info;
  if (doors_ctrl_info) {
    set_has_doors_ctrl_info();
  } else {
    clear_has_doors_ctrl_info();
  }
  // @@protoc_insertion_point(field_set_allocated:CtrlDoorsMessage.doors_ctrl_info)
}

// optional .DoorsStateInfo doors_state_info = 4;
bool CtrlDoorsMessage::has_doors_state_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CtrlDoorsMessage::set_has_doors_state_info() {
  _has_bits_[0] |= 0x00000004u;
}
void CtrlDoorsMessage::clear_has_doors_state_info() {
  _has_bits_[0] &= ~0x00000004u;
}
void CtrlDoorsMessage::clear_doors_state_info() {
  if (doors_state_info_ != NULL) doors_state_info_->::DoorsStateInfo::Clear();
  clear_has_doors_state_info();
}
const ::DoorsStateInfo& CtrlDoorsMessage::doors_state_info() const {
  // @@protoc_insertion_point(field_get:CtrlDoorsMessage.doors_state_info)
  return doors_state_info_ != NULL ? *doors_state_info_ : *default_instance_->doors_state_info_;
}
::DoorsStateInfo* CtrlDoorsMessage::mutable_doors_state_info() {
  set_has_doors_state_info();
  if (doors_state_info_ == NULL) {
    doors_state_info_ = new ::DoorsStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:CtrlDoorsMessage.doors_state_info)
  return doors_state_info_;
}
::DoorsStateInfo* CtrlDoorsMessage::release_doors_state_info() {
  // @@protoc_insertion_point(field_release:CtrlDoorsMessage.doors_state_info)
  clear_has_doors_state_info();
  ::DoorsStateInfo* temp = doors_state_info_;
  doors_state_info_ = NULL;
  return temp;
}
void CtrlDoorsMessage::set_allocated_doors_state_info(::DoorsStateInfo* doors_state_info) {
  delete doors_state_info_;
  doors_state_info_ = doors_state_info;
  if (doors_state_info) {
    set_has_doors_state_info();
  } else {
    clear_has_doors_state_info();
  }
  // @@protoc_insertion_point(field_set_allocated:CtrlDoorsMessage.doors_state_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoorsStateInfo::kLockOnOffFieldNumber;
const int DoorsStateInfo::kLockStateExceptionFieldNumber;
const int DoorsStateInfo::kDoorOnOffFieldNumber;
const int DoorsStateInfo::kDoorStateExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoorsStateInfo::DoorsStateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DoorsStateInfo)
}

void DoorsStateInfo::InitAsDefaultInstance() {
}

DoorsStateInfo::DoorsStateInfo(const DoorsStateInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DoorsStateInfo)
}

void DoorsStateInfo::SharedCtor() {
  _cached_size_ = 0;
  lock_on_off_ = GOOGLE_ULONGLONG(0);
  lock_state_exception_ = GOOGLE_ULONGLONG(0);
  door_on_off_ = GOOGLE_ULONGLONG(0);
  door_state_exception_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DoorsStateInfo::~DoorsStateInfo() {
  // @@protoc_insertion_point(destructor:DoorsStateInfo)
  SharedDtor();
}

void DoorsStateInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DoorsStateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoorsStateInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DoorsStateInfo_descriptor_;
}

const DoorsStateInfo& DoorsStateInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ctrl_5fdoors_2eproto();
  return *default_instance_;
}

DoorsStateInfo* DoorsStateInfo::default_instance_ = NULL;

DoorsStateInfo* DoorsStateInfo::New(::google::protobuf::Arena* arena) const {
  DoorsStateInfo* n = new DoorsStateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoorsStateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DoorsStateInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DoorsStateInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DoorsStateInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lock_on_off_, door_state_exception_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DoorsStateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DoorsStateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 lock_on_off = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &lock_on_off_)));
          set_has_lock_on_off();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_lock_state_exception;
        break;
      }

      // optional fixed64 lock_state_exception = 2;
      case 2: {
        if (tag == 17) {
         parse_lock_state_exception:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &lock_state_exception_)));
          set_has_lock_state_exception();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_door_on_off;
        break;
      }

      // optional fixed64 door_on_off = 4;
      case 4: {
        if (tag == 33) {
         parse_door_on_off:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &door_on_off_)));
          set_has_door_on_off();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_door_state_exception;
        break;
      }

      // optional fixed64 door_state_exception = 6;
      case 6: {
        if (tag == 49) {
         parse_door_state_exception:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &door_state_exception_)));
          set_has_door_state_exception();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DoorsStateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DoorsStateInfo)
  return false;
#undef DO_
}

void DoorsStateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DoorsStateInfo)
  // optional fixed64 lock_on_off = 1;
  if (has_lock_on_off()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->lock_on_off(), output);
  }

  // optional fixed64 lock_state_exception = 2;
  if (has_lock_state_exception()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->lock_state_exception(), output);
  }

  // optional fixed64 door_on_off = 4;
  if (has_door_on_off()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->door_on_off(), output);
  }

  // optional fixed64 door_state_exception = 6;
  if (has_door_state_exception()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(6, this->door_state_exception(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DoorsStateInfo)
}

::google::protobuf::uint8* DoorsStateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DoorsStateInfo)
  // optional fixed64 lock_on_off = 1;
  if (has_lock_on_off()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->lock_on_off(), target);
  }

  // optional fixed64 lock_state_exception = 2;
  if (has_lock_state_exception()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->lock_state_exception(), target);
  }

  // optional fixed64 door_on_off = 4;
  if (has_door_on_off()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->door_on_off(), target);
  }

  // optional fixed64 door_state_exception = 6;
  if (has_door_state_exception()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(6, this->door_state_exception(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DoorsStateInfo)
  return target;
}

int DoorsStateInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DoorsStateInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 lock_on_off = 1;
    if (has_lock_on_off()) {
      total_size += 1 + 8;
    }

    // optional fixed64 lock_state_exception = 2;
    if (has_lock_state_exception()) {
      total_size += 1 + 8;
    }

    // optional fixed64 door_on_off = 4;
    if (has_door_on_off()) {
      total_size += 1 + 8;
    }

    // optional fixed64 door_state_exception = 6;
    if (has_door_state_exception()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoorsStateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DoorsStateInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DoorsStateInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DoorsStateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DoorsStateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DoorsStateInfo)
    MergeFrom(*source);
  }
}

void DoorsStateInfo::MergeFrom(const DoorsStateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DoorsStateInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lock_on_off()) {
      set_lock_on_off(from.lock_on_off());
    }
    if (from.has_lock_state_exception()) {
      set_lock_state_exception(from.lock_state_exception());
    }
    if (from.has_door_on_off()) {
      set_door_on_off(from.door_on_off());
    }
    if (from.has_door_state_exception()) {
      set_door_state_exception(from.door_state_exception());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DoorsStateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DoorsStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoorsStateInfo::CopyFrom(const DoorsStateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DoorsStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoorsStateInfo::IsInitialized() const {

  return true;
}

void DoorsStateInfo::Swap(DoorsStateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoorsStateInfo::InternalSwap(DoorsStateInfo* other) {
  std::swap(lock_on_off_, other->lock_on_off_);
  std::swap(lock_state_exception_, other->lock_state_exception_);
  std::swap(door_on_off_, other->door_on_off_);
  std::swap(door_state_exception_, other->door_state_exception_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoorsStateInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DoorsStateInfo_descriptor_;
  metadata.reflection = DoorsStateInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DoorsStateInfo

// optional fixed64 lock_on_off = 1;
bool DoorsStateInfo::has_lock_on_off() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DoorsStateInfo::set_has_lock_on_off() {
  _has_bits_[0] |= 0x00000001u;
}
void DoorsStateInfo::clear_has_lock_on_off() {
  _has_bits_[0] &= ~0x00000001u;
}
void DoorsStateInfo::clear_lock_on_off() {
  lock_on_off_ = GOOGLE_ULONGLONG(0);
  clear_has_lock_on_off();
}
 ::google::protobuf::uint64 DoorsStateInfo::lock_on_off() const {
  // @@protoc_insertion_point(field_get:DoorsStateInfo.lock_on_off)
  return lock_on_off_;
}
 void DoorsStateInfo::set_lock_on_off(::google::protobuf::uint64 value) {
  set_has_lock_on_off();
  lock_on_off_ = value;
  // @@protoc_insertion_point(field_set:DoorsStateInfo.lock_on_off)
}

// optional fixed64 lock_state_exception = 2;
bool DoorsStateInfo::has_lock_state_exception() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DoorsStateInfo::set_has_lock_state_exception() {
  _has_bits_[0] |= 0x00000002u;
}
void DoorsStateInfo::clear_has_lock_state_exception() {
  _has_bits_[0] &= ~0x00000002u;
}
void DoorsStateInfo::clear_lock_state_exception() {
  lock_state_exception_ = GOOGLE_ULONGLONG(0);
  clear_has_lock_state_exception();
}
 ::google::protobuf::uint64 DoorsStateInfo::lock_state_exception() const {
  // @@protoc_insertion_point(field_get:DoorsStateInfo.lock_state_exception)
  return lock_state_exception_;
}
 void DoorsStateInfo::set_lock_state_exception(::google::protobuf::uint64 value) {
  set_has_lock_state_exception();
  lock_state_exception_ = value;
  // @@protoc_insertion_point(field_set:DoorsStateInfo.lock_state_exception)
}

// optional fixed64 door_on_off = 4;
bool DoorsStateInfo::has_door_on_off() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DoorsStateInfo::set_has_door_on_off() {
  _has_bits_[0] |= 0x00000004u;
}
void DoorsStateInfo::clear_has_door_on_off() {
  _has_bits_[0] &= ~0x00000004u;
}
void DoorsStateInfo::clear_door_on_off() {
  door_on_off_ = GOOGLE_ULONGLONG(0);
  clear_has_door_on_off();
}
 ::google::protobuf::uint64 DoorsStateInfo::door_on_off() const {
  // @@protoc_insertion_point(field_get:DoorsStateInfo.door_on_off)
  return door_on_off_;
}
 void DoorsStateInfo::set_door_on_off(::google::protobuf::uint64 value) {
  set_has_door_on_off();
  door_on_off_ = value;
  // @@protoc_insertion_point(field_set:DoorsStateInfo.door_on_off)
}

// optional fixed64 door_state_exception = 6;
bool DoorsStateInfo::has_door_state_exception() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DoorsStateInfo::set_has_door_state_exception() {
  _has_bits_[0] |= 0x00000008u;
}
void DoorsStateInfo::clear_has_door_state_exception() {
  _has_bits_[0] &= ~0x00000008u;
}
void DoorsStateInfo::clear_door_state_exception() {
  door_state_exception_ = GOOGLE_ULONGLONG(0);
  clear_has_door_state_exception();
}
 ::google::protobuf::uint64 DoorsStateInfo::door_state_exception() const {
  // @@protoc_insertion_point(field_get:DoorsStateInfo.door_state_exception)
  return door_state_exception_;
}
 void DoorsStateInfo::set_door_state_exception(::google::protobuf::uint64 value) {
  set_has_door_state_exception();
  door_state_exception_ = value;
  // @@protoc_insertion_point(field_set:DoorsStateInfo.door_state_exception)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
