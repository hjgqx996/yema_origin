// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ctrl_common_param_tbox.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ctrl_common_param_tbox.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CtrlCommonParamTbox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CtrlCommonParamTbox_reflection_ = NULL;
const ::google::protobuf::Descriptor* CtrlCommonInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CtrlCommonInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto() {
  protobuf_AddDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ctrl_common_param_tbox.proto");
  GOOGLE_CHECK(file != NULL);
  CtrlCommonParamTbox_descriptor_ = file->message_type(0);
  static const int CtrlCommonParamTbox_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonParamTbox, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonParamTbox, delay_time_),
  };
  CtrlCommonParamTbox_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CtrlCommonParamTbox_descriptor_,
      CtrlCommonParamTbox::default_instance_,
      CtrlCommonParamTbox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonParamTbox, _has_bits_[0]),
      -1,
      -1,
      sizeof(CtrlCommonParamTbox),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonParamTbox, _internal_metadata_),
      -1);
  CtrlCommonInfo_descriptor_ = file->message_type(1);
  static const int CtrlCommonInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonInfo, valid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonInfo, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonInfo, state_),
  };
  CtrlCommonInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CtrlCommonInfo_descriptor_,
      CtrlCommonInfo::default_instance_,
      CtrlCommonInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CtrlCommonInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CtrlCommonInfo, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CtrlCommonParamTbox_descriptor_, &CtrlCommonParamTbox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CtrlCommonInfo_descriptor_, &CtrlCommonInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ctrl_5fcommon_5fparam_5ftbox_2eproto() {
  delete CtrlCommonParamTbox::default_instance_;
  delete CtrlCommonParamTbox_reflection_;
  delete CtrlCommonInfo::default_instance_;
  delete CtrlCommonInfo_reflection_;
}

void protobuf_AddDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034ctrl_common_param_tbox.proto\"=\n\023CtrlCo"
    "mmonParamTbox\022\022\n\nrequest_id\030\001 \001(\006\022\022\n\ndel"
    "ay_time\030\002 \001(\005\">\n\016CtrlCommonInfo\022\r\n\005valid"
    "\030\001 \001(\006\022\016\n\006result\030\002 \001(\006\022\r\n\005state\030\004 \001(\006B7\n"
    "\034com.mx.server.remote.v2.beanB\027CtrlCommo"
    "nParamTboxBean", 214);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ctrl_common_param_tbox.proto", &protobuf_RegisterTypes);
  CtrlCommonParamTbox::default_instance_ = new CtrlCommonParamTbox();
  CtrlCommonInfo::default_instance_ = new CtrlCommonInfo();
  CtrlCommonParamTbox::default_instance_->InitAsDefaultInstance();
  CtrlCommonInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ctrl_5fcommon_5fparam_5ftbox_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ctrl_5fcommon_5fparam_5ftbox_2eproto {
  StaticDescriptorInitializer_ctrl_5fcommon_5fparam_5ftbox_2eproto() {
    protobuf_AddDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto();
  }
} static_descriptor_initializer_ctrl_5fcommon_5fparam_5ftbox_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtrlCommonParamTbox::kRequestIdFieldNumber;
const int CtrlCommonParamTbox::kDelayTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtrlCommonParamTbox::CtrlCommonParamTbox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CtrlCommonParamTbox)
}

void CtrlCommonParamTbox::InitAsDefaultInstance() {
}

CtrlCommonParamTbox::CtrlCommonParamTbox(const CtrlCommonParamTbox& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CtrlCommonParamTbox)
}

void CtrlCommonParamTbox::SharedCtor() {
  _cached_size_ = 0;
  request_id_ = GOOGLE_ULONGLONG(0);
  delay_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CtrlCommonParamTbox::~CtrlCommonParamTbox() {
  // @@protoc_insertion_point(destructor:CtrlCommonParamTbox)
  SharedDtor();
}

void CtrlCommonParamTbox::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CtrlCommonParamTbox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CtrlCommonParamTbox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CtrlCommonParamTbox_descriptor_;
}

const CtrlCommonParamTbox& CtrlCommonParamTbox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto();
  return *default_instance_;
}

CtrlCommonParamTbox* CtrlCommonParamTbox::default_instance_ = NULL;

CtrlCommonParamTbox* CtrlCommonParamTbox::New(::google::protobuf::Arena* arena) const {
  CtrlCommonParamTbox* n = new CtrlCommonParamTbox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CtrlCommonParamTbox::Clear() {
// @@protoc_insertion_point(message_clear_start:CtrlCommonParamTbox)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CtrlCommonParamTbox, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CtrlCommonParamTbox*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(request_id_, delay_time_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CtrlCommonParamTbox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CtrlCommonParamTbox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 request_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &request_id_)));
          set_has_request_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_delay_time;
        break;
      }

      // optional int32 delay_time = 2;
      case 2: {
        if (tag == 16) {
         parse_delay_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delay_time_)));
          set_has_delay_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CtrlCommonParamTbox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CtrlCommonParamTbox)
  return false;
#undef DO_
}

void CtrlCommonParamTbox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CtrlCommonParamTbox)
  // optional fixed64 request_id = 1;
  if (has_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->request_id(), output);
  }

  // optional int32 delay_time = 2;
  if (has_delay_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delay_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CtrlCommonParamTbox)
}

::google::protobuf::uint8* CtrlCommonParamTbox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CtrlCommonParamTbox)
  // optional fixed64 request_id = 1;
  if (has_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->request_id(), target);
  }

  // optional int32 delay_time = 2;
  if (has_delay_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delay_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CtrlCommonParamTbox)
  return target;
}

int CtrlCommonParamTbox::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CtrlCommonParamTbox)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 request_id = 1;
    if (has_request_id()) {
      total_size += 1 + 8;
    }

    // optional int32 delay_time = 2;
    if (has_delay_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->delay_time());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CtrlCommonParamTbox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CtrlCommonParamTbox)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CtrlCommonParamTbox* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CtrlCommonParamTbox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CtrlCommonParamTbox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CtrlCommonParamTbox)
    MergeFrom(*source);
  }
}

void CtrlCommonParamTbox::MergeFrom(const CtrlCommonParamTbox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CtrlCommonParamTbox)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request_id()) {
      set_request_id(from.request_id());
    }
    if (from.has_delay_time()) {
      set_delay_time(from.delay_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CtrlCommonParamTbox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CtrlCommonParamTbox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtrlCommonParamTbox::CopyFrom(const CtrlCommonParamTbox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CtrlCommonParamTbox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtrlCommonParamTbox::IsInitialized() const {

  return true;
}

void CtrlCommonParamTbox::Swap(CtrlCommonParamTbox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtrlCommonParamTbox::InternalSwap(CtrlCommonParamTbox* other) {
  std::swap(request_id_, other->request_id_);
  std::swap(delay_time_, other->delay_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CtrlCommonParamTbox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CtrlCommonParamTbox_descriptor_;
  metadata.reflection = CtrlCommonParamTbox_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CtrlCommonParamTbox

// optional fixed64 request_id = 1;
bool CtrlCommonParamTbox::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CtrlCommonParamTbox::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CtrlCommonParamTbox::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CtrlCommonParamTbox::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
  clear_has_request_id();
}
 ::google::protobuf::uint64 CtrlCommonParamTbox::request_id() const {
  // @@protoc_insertion_point(field_get:CtrlCommonParamTbox.request_id)
  return request_id_;
}
 void CtrlCommonParamTbox::set_request_id(::google::protobuf::uint64 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:CtrlCommonParamTbox.request_id)
}

// optional int32 delay_time = 2;
bool CtrlCommonParamTbox::has_delay_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CtrlCommonParamTbox::set_has_delay_time() {
  _has_bits_[0] |= 0x00000002u;
}
void CtrlCommonParamTbox::clear_has_delay_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void CtrlCommonParamTbox::clear_delay_time() {
  delay_time_ = 0;
  clear_has_delay_time();
}
 ::google::protobuf::int32 CtrlCommonParamTbox::delay_time() const {
  // @@protoc_insertion_point(field_get:CtrlCommonParamTbox.delay_time)
  return delay_time_;
}
 void CtrlCommonParamTbox::set_delay_time(::google::protobuf::int32 value) {
  set_has_delay_time();
  delay_time_ = value;
  // @@protoc_insertion_point(field_set:CtrlCommonParamTbox.delay_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CtrlCommonInfo::kValidFieldNumber;
const int CtrlCommonInfo::kResultFieldNumber;
const int CtrlCommonInfo::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CtrlCommonInfo::CtrlCommonInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CtrlCommonInfo)
}

void CtrlCommonInfo::InitAsDefaultInstance() {
}

CtrlCommonInfo::CtrlCommonInfo(const CtrlCommonInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CtrlCommonInfo)
}

void CtrlCommonInfo::SharedCtor() {
  _cached_size_ = 0;
  valid_ = GOOGLE_ULONGLONG(0);
  result_ = GOOGLE_ULONGLONG(0);
  state_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CtrlCommonInfo::~CtrlCommonInfo() {
  // @@protoc_insertion_point(destructor:CtrlCommonInfo)
  SharedDtor();
}

void CtrlCommonInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CtrlCommonInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CtrlCommonInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CtrlCommonInfo_descriptor_;
}

const CtrlCommonInfo& CtrlCommonInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ctrl_5fcommon_5fparam_5ftbox_2eproto();
  return *default_instance_;
}

CtrlCommonInfo* CtrlCommonInfo::default_instance_ = NULL;

CtrlCommonInfo* CtrlCommonInfo::New(::google::protobuf::Arena* arena) const {
  CtrlCommonInfo* n = new CtrlCommonInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CtrlCommonInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CtrlCommonInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CtrlCommonInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CtrlCommonInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(valid_, state_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CtrlCommonInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CtrlCommonInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 valid = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &valid_)));
          set_has_valid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_result;
        break;
      }

      // optional fixed64 result = 2;
      case 2: {
        if (tag == 17) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_state;
        break;
      }

      // optional fixed64 state = 4;
      case 4: {
        if (tag == 33) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CtrlCommonInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CtrlCommonInfo)
  return false;
#undef DO_
}

void CtrlCommonInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CtrlCommonInfo)
  // optional fixed64 valid = 1;
  if (has_valid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->valid(), output);
  }

  // optional fixed64 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->result(), output);
  }

  // optional fixed64 state = 4;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CtrlCommonInfo)
}

::google::protobuf::uint8* CtrlCommonInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CtrlCommonInfo)
  // optional fixed64 valid = 1;
  if (has_valid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->valid(), target);
  }

  // optional fixed64 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->result(), target);
  }

  // optional fixed64 state = 4;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CtrlCommonInfo)
  return target;
}

int CtrlCommonInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CtrlCommonInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 valid = 1;
    if (has_valid()) {
      total_size += 1 + 8;
    }

    // optional fixed64 result = 2;
    if (has_result()) {
      total_size += 1 + 8;
    }

    // optional fixed64 state = 4;
    if (has_state()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CtrlCommonInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CtrlCommonInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CtrlCommonInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CtrlCommonInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CtrlCommonInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CtrlCommonInfo)
    MergeFrom(*source);
  }
}

void CtrlCommonInfo::MergeFrom(const CtrlCommonInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CtrlCommonInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_valid()) {
      set_valid(from.valid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CtrlCommonInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CtrlCommonInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CtrlCommonInfo::CopyFrom(const CtrlCommonInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CtrlCommonInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CtrlCommonInfo::IsInitialized() const {

  return true;
}

void CtrlCommonInfo::Swap(CtrlCommonInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CtrlCommonInfo::InternalSwap(CtrlCommonInfo* other) {
  std::swap(valid_, other->valid_);
  std::swap(result_, other->result_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CtrlCommonInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CtrlCommonInfo_descriptor_;
  metadata.reflection = CtrlCommonInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CtrlCommonInfo

// optional fixed64 valid = 1;
bool CtrlCommonInfo::has_valid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CtrlCommonInfo::set_has_valid() {
  _has_bits_[0] |= 0x00000001u;
}
void CtrlCommonInfo::clear_has_valid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CtrlCommonInfo::clear_valid() {
  valid_ = GOOGLE_ULONGLONG(0);
  clear_has_valid();
}
 ::google::protobuf::uint64 CtrlCommonInfo::valid() const {
  // @@protoc_insertion_point(field_get:CtrlCommonInfo.valid)
  return valid_;
}
 void CtrlCommonInfo::set_valid(::google::protobuf::uint64 value) {
  set_has_valid();
  valid_ = value;
  // @@protoc_insertion_point(field_set:CtrlCommonInfo.valid)
}

// optional fixed64 result = 2;
bool CtrlCommonInfo::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CtrlCommonInfo::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void CtrlCommonInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void CtrlCommonInfo::clear_result() {
  result_ = GOOGLE_ULONGLONG(0);
  clear_has_result();
}
 ::google::protobuf::uint64 CtrlCommonInfo::result() const {
  // @@protoc_insertion_point(field_get:CtrlCommonInfo.result)
  return result_;
}
 void CtrlCommonInfo::set_result(::google::protobuf::uint64 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CtrlCommonInfo.result)
}

// optional fixed64 state = 4;
bool CtrlCommonInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CtrlCommonInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
void CtrlCommonInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
void CtrlCommonInfo::clear_state() {
  state_ = GOOGLE_ULONGLONG(0);
  clear_has_state();
}
 ::google::protobuf::uint64 CtrlCommonInfo::state() const {
  // @@protoc_insertion_point(field_get:CtrlCommonInfo.state)
  return state_;
}
 void CtrlCommonInfo::set_state(::google::protobuf::uint64 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CtrlCommonInfo.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
